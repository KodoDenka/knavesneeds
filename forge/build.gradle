plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    forge {
        convertAccessWideners = true
        extraAccessWideners.add loom.accessWidenerPath.get().asFile.name

        mixinConfig "knavesneeds-common.mixins.json"
        mixinConfig "knavesneeds.mixins.json"
    }
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

repositories {
    maven { url "https://cursemaven.com" }
    maven { url 'https://api.modrinth.com/maven' }
    maven {
        name "KosmX's maven"
        url 'https://maven.kosmx.dev/'
    }
    maven {
        url = "https://modmaven.dev/"
    }
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.forge_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury-forge:${rootProject.architectury_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }

    // Required Dependencies
        // Cloth Config
        modApi("me.shedaniel.cloth:cloth-config-forge:${project.cloth_config_version}")

        // Better Combat & Player Animation Lib
        modApi("maven.modrinth:better-combat:${rootProject.better_combat_version}-forge")
        modApi("dev.kosmx.player-anim:player-animation-lib-forge:${rootProject.player_anim}")

        // Simply Swords
        modApi("curse.maven:simply-swords-659887:4406899")

    // Optional Mods (Mostly for testing)
        // Twilight Forest
        // modImplementation("teamtwilight:twilightforest:${rootProject.twilight_forest_version_forge}:universal")

        // Blue Skies and Structure Gel API
        // modApi ("curse.maven:blue-skies-312918:3966273")
        // modApi ("curse.maven:structure-gel-api-378802:4029363")

        // The Undergarden
        // modApi("curse.maven:the-undergarden-379849:4057184")

        // Plus The End
        // modApi("curse.maven:plus-the-end-573382:4055155")
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        maven { url 'https://maven.shedaniel.me/' }

    }
}
